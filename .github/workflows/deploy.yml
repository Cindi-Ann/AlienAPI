name: Example GitHub Action

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:  ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: af-south-1
    
      - name: Get secrets from AWS Secrets Manager
        id: secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
             GALAXY, prod/GalaxyMatch,
             EC2_PRIVATE_KEY, ec2-private-key
          parse-json-secrets: true
             

      - name: Echo secrets to terminal
        run: |
            echo "${{ env.GALAXY }}"
            echo "${{ env.EC2_PRIVATE_KEY }}"
            
      - name: Echo the secrets
        run: |
          echo "Username is: ${{ env.GALAXY_USERNAME }}"
          echo "Password is: ${{ env.GALAXY_PASSWORD }}"
          echo "Database Engine is: ${{ env.GALAXY_ENGINE }}"
          echo "Host is: ${{ env.GALAXY_HOST }}"
          echo "Port is: ${{ env.GALAXY_PORT }}"
          echo "DB Instance Identifier is: ${{ env.GALAXY_DBINSTANCEIDENTIFIER }}"
          echo "Google Client ID is: ${{ env.GALAXY_GOOGLECLIENTID }}"

      - name: Write private key
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          echo $EC2_PRIVATE_KEY > galaxymatch-key.pem
          chmod 600 galaxymatch-key.pem
      - name: SSH into EC2 and Create Text File
        run: |
          ssh -i galaxymatch-key.pem ec2-user@ec2-13-245-11-129.af-south-1.compute.amazonaws.com /bin/bash << 'EOF'
            echo 'ðŸš€ Hello from GitHub Actions!' > /home/ubuntu/github-actions-log.txt"
            echo "Server is running..." 
          EOF
          

      
      


        

